{"version":3,"file":"common.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/operators/catchError.js","./node_modules/rxjs/dist/esm/internal/operators/scan.js","./node_modules/rxjs/dist/esm/internal/operators/mergeAll.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm/internal/operators/scanInternals.js","./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./node_modules/rxjs/dist/esm/internal/util/createObject.js","./node_modules/rxjs/dist/esm/internal/util/argsArgArrayOrObject.js","./node_modules/rxjs/dist/esm/internal/util/mapOneOrManyArgs.js","./node_modules/rxjs/dist/esm/internal/operators/tap.js","./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/operators/finalize.js"],"sourcesContent":["import { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\nexport function catchError(selector) {\n    return operate((source, subscriber) => {\n        let innerSub = null;\n        let syncUnsub = false;\n        let handledResult;\n        innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n            handledResult = innerFrom(selector(err, catchError(selector)(source)));\n            if (innerSub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                handledResult.subscribe(subscriber);\n            }\n            else {\n                syncUnsub = true;\n            }\n        }));\n        if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            handledResult.subscribe(subscriber);\n        }\n    });\n}\n","import { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\nexport function scan(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, true));\n}\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent = Infinity) {\n    return mergeMap(identity, concurrent);\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","import { createOperatorSubscriber } from './OperatorSubscriber';\nexport function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {\n    return (source, subscriber) => {\n        let hasState = hasSeed;\n        let state = seed;\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const i = index++;\n            state = hasState\n                ?\n                    accumulator(state, value, i)\n                :\n                    ((hasState = true), value);\n            emitOnNext && subscriber.next(state);\n        }, emitBeforeComplete &&\n            (() => {\n                hasState && subscriber.next(state);\n                subscriber.complete();\n            })));\n    };\n}\n","import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","export function createObject(keys, values) {\n    return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {});\n}\n","const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\nexport function argsArgArrayOrObject(args) {\n    if (args.length === 1) {\n        const first = args[0];\n        if (isArray(first)) {\n            return { args: first, keys: null };\n        }\n        if (isPOJO(first)) {\n            const keys = getKeys(first);\n            return {\n                args: keys.map((key) => first[key]),\n                keys,\n            };\n        }\n    }\n    return { args: args, keys: null };\n}\nfunction isPOJO(obj) {\n    return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n","import { map } from \"../operators/map\";\nconst { isArray } = Array;\nfunction callOrApply(fn, args) {\n    return isArray(args) ? fn(...args) : fn(args);\n}\nexport function mapOneOrManyArgs(fn) {\n    return map(args => callOrApply(fn, args));\n}\n","import { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nexport function tap(observerOrNext, error, complete) {\n    const tapObserver = isFunction(observerOrNext) || error || complete\n        ?\n            { next: observerOrNext, error, complete }\n        : observerOrNext;\n    return tapObserver\n        ? operate((source, subscriber) => {\n            var _a;\n            (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n            let isUnsub = true;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                var _a;\n                (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);\n                subscriber.next(value);\n            }, () => {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                subscriber.complete();\n            }, (err) => {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);\n                subscriber.error(err);\n            }, () => {\n                var _a, _b;\n                if (isUnsub) {\n                    (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                }\n                (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);\n            }));\n        })\n        :\n            identity;\n}\n","import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { operate } from '../util/lift';\nexport function finalize(callback) {\n    return operate((source, subscriber) => {\n        try {\n            source.subscribe(subscriber);\n        }\n        finally {\n            subscriber.add(callback);\n        }\n    });\n}\n"],"names":["innerFrom","createOperatorSubscriber","operate","catchError","selector","source","subscriber","innerSub","syncUnsub","handledResult","subscribe","undefined","err","unsubscribe","scanInternals","scan","accumulator","seed","arguments","length","mergeMap","identity","mergeAll","concurrent","Infinity","noop","takeUntil","notifier","complete","closed","EMPTY","take","count","seen","value","next","dateTimestampProvider","now","delegate","Date","hasSeed","emitOnNext","emitBeforeComplete","hasState","state","index","i","Subject","ReplaySubject","constructor","_bufferSize","_windowTime","_timestampProvider","_buffer","_infiniteTimeWindow","Math","max","isStopped","push","_trimBuffer","_subscribe","_throwIfClosed","subscription","_innerSubscribe","copy","slice","_checkFinalizedStatuses","adjustedBufferSize","splice","last","createObject","keys","values","reduce","result","key","isArray","Array","getPrototypeOf","prototype","objectProto","getKeys","Object","argsArgArrayOrObject","args","first","isPOJO","map","obj","callOrApply","fn","mapOneOrManyArgs","isFunction","tap","observerOrNext","error","tapObserver","_a","call","isUnsub","_b","finalize","Observable","empty","scheduler","emptyScheduled","schedule","callback","add"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}