{"version":3,"file":"__federation_expose_Routes.js","mappings":"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","sources":["./frontend/angular/micro-apps/mf-todo/src/lib/filter/filter.reducer.ts","./frontend/angular/micro-apps/mf-todo/src/lib/models/todo.model.ts","./frontend/angular/micro-apps/mf-todo/src/lib/mf-todo/store/todo.actions.ts","./frontend/angular/micro-apps/mf-todo/src/lib/todo.router.ts","./frontend/angular/micro-apps/mf-todo/src/lib/filter/filter.actions.ts","./frontend/angular/micro-apps/mf-todo/src/lib/mf-todo/store/todo.reducer.ts"],"sourcesContent":["import { SET_FILTER, SetFilterAction } from './filter.actions';\r\n\r\n//const initialState: FilterType = 'all';\r\n\r\nexport function filterReducer(state: 'completed' | 'pending' | 'all' = 'all' , action: SetFilterAction): 'completed' | 'pending' | 'all'  {\r\n\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return action.filter;\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n  return state;\r\n}\r\n","export class Todo {\r\n  public id: number;\r\n  public content: string;\r\n  public completion: boolean;\r\n\r\n  constructor(content: string) {\r\n    this.id = Math.random();\r\n    this.content = `${content.charAt(0).toLowerCase()}${content.slice(1)}`;\r\n    this.completion = false;\r\n  }\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nexport const ADD_TODO = '[TODO] add todo';\r\nexport const TOGGLE_TODO = '[TODO] toggle todo';\r\nexport const EDIT_TODO = '[TODO] Edit todo';\r\nexport const DELETE_TODO = '[TODO] Delete todo';\r\nexport const TOGGLE_ALL_TODO = '[TODO] toggle all todo';\r\nexport const DELETE_COMPLETED_TODO= '[TODO] delete all completed todos';\r\n\r\nexport class AddTodoAction implements Action {\r\n  readonly type: string = ADD_TODO;\r\n\r\n  constructor(public content: string) {\r\n    console.log(\"action construct\", content);\r\n  }\r\n}\r\n\r\n\r\nexport class ToggleTodoAction implements Action {\r\n  readonly type: string = TOGGLE_TODO;\r\n\r\n  constructor(public id: number) {\r\n  }\r\n}\r\n\r\n\r\nexport class EditTodoAction implements Action {\r\n  readonly type: string = EDIT_TODO;\r\n\r\n  constructor(public id: number, public newContent: string) {\r\n  }\r\n}\r\n\r\nexport class DeleteTodoAction implements Action {\r\n  readonly type: string = DELETE_TODO;\r\n\r\n  constructor(public id: number) {\r\n  }\r\n}\r\n\r\nexport class ToggleAllTodoAction implements Action {\r\n  readonly type: string = TOGGLE_ALL_TODO;\r\n\r\n}\r\n\r\nexport class DeleteAllCompletedTodoAction implements Action {\r\n  readonly type: string = DELETE_COMPLETED_TODO;\r\n}\r\n\r\n\r\nexport type TodoActions =\r\n  AddTodoAction\r\n  | ToggleTodoAction\r\n  | EditTodoAction\r\n  | ToggleAllTodoAction\r\n  | DeleteAllCompletedTodoAction;\r\n","import { importProvidersFrom } from \"@angular/core\";\r\nimport { Routes } from \"@angular/router\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { reducers } from \"./mf-todo/store/todo.reducer\";\r\nimport { StoreDevtoolsModule, StoreDevtoolsOptions } from '@ngrx/store-devtools';\r\n\r\nexport const route: Routes =[\r\n\r\n    {\r\n        path: '',\r\n        loadComponent: ()=>{ \r\n                console.log(\"CALLING MAIN TODO COMPONENT\")\r\n            return import(\"./mf-todo/mf-todo.component\").then( c => c.MfTodoComponent)},\r\n        providers:[\r\n            importProvidersFrom(\r\n                StoreModule.forFeature(\"todos\", reducers),\r\n                StoreDevtoolsModule.instrument({\r\n                  maxAge: 25,\r\n                  logOnly: true\r\n                } as StoreDevtoolsOptions))\r\n        ]\r\n    }\r\n]","import {Action} from '@ngrx/store';\r\n\r\nexport const SET_FILTER = '[FILTER] Set Filter';\r\n\r\n//export type FilterType 'completed' | 'pending' | 'all' | undefined;\r\n\r\nexport class SetFilterAction implements Action {\r\n  readonly type: string = SET_FILTER;\r\n\r\n\r\n  constructor(public filter: 'completed' | 'pending' | 'all' = 'all') {\r\n\r\n  }\r\n\r\n}\r\n\r\n//export type FilterActions = SetFilterAction;\r\n","import { ActionReducerMap } from '@ngrx/store';\r\nimport { SetFilterAction } from '../../filter';\r\nimport { filterReducer } from '../../filter/filter.reducer';\r\nimport { Todo } from '../../models/todo.model';\r\nimport {\r\n  ADD_TODO,\r\n  AddTodoAction,\r\n  DELETE_COMPLETED_TODO, DELETE_TODO,\r\n  DeleteAllCompletedTodoAction, DeleteTodoAction,\r\n  EDIT_TODO,\r\n  EditTodoAction,\r\n  TodoActions,\r\n  TOGGLE_ALL_TODO,\r\n  TOGGLE_TODO,\r\n  ToggleAllTodoAction,\r\n  ToggleTodoAction\r\n} from './todo.actions';\r\n\r\nexport interface TodosState /*extends AppState*/{\r\n  todos: Todo[];\r\n  filter: 'completed' | 'pending' | 'all' ;\r\n}\r\n\r\nconst initialState: Todo[] = [\r\n  new Todo('Watch match barcelona vs. manU'),\r\n  new Todo('Play with valentin'),\r\n  new Todo('Go to shop')]\r\n  .map((value: Todo, index: number) => {\r\n    if (index === 2) {\r\n      value.completion = true;\r\n    }\r\n    return value;\r\n  }, );\r\n\r\n\r\nexport function todoReducer(state: Todo[] = initialState, action: TodoActions): Todo[]  {\r\n\r\n\r\n  switch (action.type) {\r\n\r\n\r\n    case  ADD_TODO :\r\n      if (action instanceof AddTodoAction) {\r\n        const newTodo: Todo = new Todo(action.content);\r\n        return [...state, newTodo];\r\n      }\r\n      break;\r\n\r\n\r\n    case TOGGLE_TODO:\r\n      if (action instanceof ToggleTodoAction) {\r\n        return state.map((todo: Todo) => {\r\n          if (todo.id === action.id) {\r\n            const todoRef: Todo = {...todo, completion: !todo.completion};\r\n            return todoRef;\r\n          } else {\r\n            return todo;\r\n          }\r\n        });\r\n      }\r\n      break;\r\n\r\n\r\n    case EDIT_TODO:\r\n      if (action instanceof EditTodoAction) {\r\n        return state.map((todo: Todo) => {\r\n          if (todo.id === action.id) {\r\n            const todoRef: Todo = {...todo, content: action.newContent};\r\n            return todoRef;\r\n          } else {\r\n            return todo;\r\n          }\r\n        });\r\n      }\r\n      break;\r\n\r\n    case DELETE_TODO:\r\n      if (action instanceof DeleteTodoAction) {\r\n        return state.filter((todo: Todo) => todo.id !== action.id);\r\n      }\r\n      break;\r\n\r\n    case TOGGLE_ALL_TODO:\r\n      if (action instanceof ToggleAllTodoAction) {\r\n        return state.map((todo: Todo) => {\r\n          return {...todo, completion: !todo.completion}\r\n        });\r\n      }\r\n      break;\r\n    case  DELETE_COMPLETED_TODO:\r\n      if (action instanceof DeleteAllCompletedTodoAction) {\r\n        return state.filter((todo: Todo) => !todo.completion);\r\n      }\r\n      break;\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\n\r\n\r\nexport const reducers: ActionReducerMap<TodosState,SetFilterAction &TodoActions > = {\r\n  todos: todoReducer,\r\n  filter:  filterReducer\r\n}\r\n"],"names":["SET_FILTER","filterReducer","state","action","type","filter","Todo","constructor","content","id","Math","random","charAt","toLowerCase","slice","completion","ADD_TODO","TOGGLE_TODO","EDIT_TODO","DELETE_TODO","TOGGLE_ALL_TODO","DELETE_COMPLETED_TODO","AddTodoAction","console","log","ToggleTodoAction","EditTodoAction","newContent","DeleteTodoAction","ToggleAllTodoAction","DeleteAllCompletedTodoAction","importProvidersFrom","StoreModule","reducers","StoreDevtoolsModule","route","path","loadComponent","then","c","MfTodoComponent","providers","forFeature","instrument","maxAge","logOnly","SetFilterAction","initialState","map","value","index","todoReducer","newTodo","todo","todoRef","todos"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}