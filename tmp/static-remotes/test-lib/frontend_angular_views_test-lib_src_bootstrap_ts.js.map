{"version":3,"file":"frontend_angular_views_test-lib_src_bootstrap_ts.js","mappings":";;;;;;;;;;;;;;;;;AAA8E;AAC9B;AACP;AAElC,MAAMG,SAAS,GAAsB;EAC1CC,SAAS,EAAE,CACTJ,yEAA0B,CAAC;IAAEK,eAAe,EAAE;EAAI,CAAE,CAAC,EACrDJ,8DAAa,CAACC,kDAAS,CAAC;CAE3B;;;;;;;;;;;;;;;ACTgE;AACpB;AAC6B;AAE1EI,+EAAoB,CAACC,mFAAoB,EAAEJ,sDAAS,CAAC,CAACK,KAAK,CAAEC,GAAG,IAC9DC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CACnB;;;;;;;;;;;;;;ACJM,MAAMP,SAAS,GAAY,CAChC;EACEU,IAAI,EAAE,EAAE;EACRC,YAAY,EAAEA,CAAA,KAAM,4IAAqC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAE,CAACC,YAAY;CACtF,CACF","sources":["./frontend/angular/views/test-lib/src/app/app.config.ts","./frontend/angular/views/test-lib/src/bootstrap.ts","./frontend/angular/views/test-lib/src/app/app.routes.ts"],"sourcesContent":["import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { appRoutes } from './app.routes';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(appRoutes),\n  ],\n};\n","import { bootstrapApplication } from '@angular/platform-browser';\nimport { appConfig } from './app/app.config';\nimport { RemoteEntryComponent } from './app/remote-entry/entry.component';\n\nbootstrapApplication(RemoteEntryComponent, appConfig).catch((err) =>\n  console.error(err),\n);\n","import { Route } from '@angular/router';\n\nexport const appRoutes: Route[] = [\n  {\n    path: '',\n    loadChildren: () => import('./remote-entry/entry.routes').then((m) => m!.remoteRoutes),\n  },\n];\n"],"names":["provideZoneChangeDetection","provideRouter","appRoutes","appConfig","providers","eventCoalescing","bootstrapApplication","RemoteEntryComponent","catch","err","console","error","path","loadChildren","then","m","remoteRoutes"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}